name: CI
on:
  push:
  pull_request:

jobs:
  tests:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - name: Install Neovim
        shell: bash
        run: |
          wget -q https://github.com/neovim/neovim/releases/download/nightly/nvim-linux64.deb -O /tmp/nvim.deb
          sudo dpkg -i /tmp/nvim.deb
      - name: Run Tests
        run: |
          nvim --version
          [ ! -d tests ] && exit 0
          nvim --headless -u tests/init.lua -c "PlenaryBustedDirectory tests/ {minimal_init = 'tests/init.lua', sequential = true}"
  docs:
    runs-on: ubuntu-latest
    needs: tests
    if: ${{ github.ref == 'refs/heads/main' }}
    steps:
      - uses: actions/checkout@v3
      - name: panvimdoc
        uses: kdheepak/panvimdoc@main
        with:
          vimdoc: snip-lookup.nvim
          version: "Neovim >= 0.8.0"
          demojify: true
          treesitter: true
      - name: Push changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: "chore(build): auto-generate vimdoc"
          commit_user_name: "github-actions[bot]"
          commit_user_email: "github-actions[bot]@users.noreply.github.com"
          commit_author: "github-actions[bot] <github-actions[bot]@users.noreply.github.com>"
  release:
    name: release
    outputs:
      releases_created: ${{ steps.release.outputs.releases_created }}
      upload_url: ${{ steps.release.outputs.upload_url }}
    if: ${{ github.ref == 'refs/heads/main' }}
    needs:
      - docs
      - tests
    runs-on: ubuntu-latest
    steps:
      - uses: google-github-actions/release-please-action@v3
        id: release
        with:
          release-type: rust
          package-name: snip-lookup.nvim
      - uses: actions/checkout@v3
      - name: tag stable versions
        if: ${{ steps.release.outputs.release_created }}
        run: |
          git config user.name github-actions[bot]
          git config user.email github-actions[bot]@users.noreply.github.com
          git remote add gh-token "https://${{ secrets.GITHUB_TOKEN }}@github.com/google-github-actions/release-please-action.git"
          git tag -d stable || true
          git push origin :stable || true
          git tag -a stable -m "Last Stable Release"
          git push origin stable

  #--------------------------------------------------------------------#
  #                   Attach rust assets to release                    #
  #--------------------------------------------------------------------#
  attach-asset-mac:
    name: Attach MacOS Asset
    runs-on: macos-latest
    needs: release
    if: needs.release.outputs.releases_created
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install latest rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          default: true
          override: true
      - name: build
        run: cargo build --all --release && mv target/release/libsnip_lookup.dylib lua/snip_lookup.so
      - uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          # Get the upload url from release-please outputs
          upload_url: ${{ needs.release.outputs.upload_url }}
          asset_path: ./lua/snip-lookup-mac-x86_64.tar.gz
